@model Selectt.Entities.Poll

@{
    ViewBag.Title = "Results";
}

<h2>Results</h2>

<table class="table">
    <tr>
        <th>Answer</th>
        <th>Votes</th>
    </tr>
    @foreach (var answer in Model.Answers)
    {
        <tr>
            <td>@answer.PollAnswer</td>
            <td>@answer.Responses.Count</td>
        </tr>
    }
</table>


<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <!-- Center the header -->
            <div class="card-header">
                <div class="row" id="chartRow">

                    <div id="title-pie" class="col-sm-12 text-center">
                        Pie Chart
                    </div>
                    <div id="title-bar" style= display:none; class="col-sm-12 text-center">
                        Bar Chart
                    </div>
                    <div class="col-sm-11">
                        <label class="switch">

                            <input class="switch-input" type="checkbox" onchange="SwapCharts()" />
                            <span class="switch-label" data-on="Pie" data-off="Bar"></span>
                            <span class="switch-handle"></span>

                        </label>

                    </div>

                </div>
                <div  id ="pie-ID"class="card-body-pie">
                    <canvas class="my-4 h-2" id="pie"></canvas>
                </div>
                <div  id ="bar-ID" style=display:none; class="card-body-bar">
                    <canvas class="my-4 h-25" id="bar"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>











@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.0.2/chart.min.js"></script>
    <script type="text/javascript">



        function SwapCharts() {
            var x = document.getElementById("pie-ID");
            var y = document.getElementById("bar-ID");
            var a = document.getElementById("title-pie");
            var b = document.getElementById("title-bar");
            if (x.style.display === "none") {
                
                x.style.display = "block";
                y.style.display = "none";
                a.style.display = "block";
                b.style.display = "none";
            } else{
                x.style.display = "none";
                y.style.display = "block";
                a.style.display = "none";
                b.style.display = "block";
                
            }
        }








    var piechart = document.getElementById('pie').getContext('2d');
    var mypiechart = new Chart(piechart, {
        type: 'pie',
        data: {
            labels: ['@Html.Raw(string.Join("','",Model.Answers.Select(a=>a.PollAnswer).ToList()))'],
            datasets: [{
                label: 'Pie Chart',
                data: [@Html.Raw(string.Join(",",Model.Answers.Select(a=>a.Responses.Count).ToList()))],
                backgroundColor: ['#42417a', '#215dbf', '#31d2de', '#748f91'],
                hoverOffset: 5
            
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        precision: 0,
                        beginAtZero:true
                    }
                }]
            }
        }
    })


    var barchart = document.getElementById('bar').getContext('2d');
    var mybarchart = new Chart(barchart, {
        type: 'bar',
        data: {
            labels: ['@Html.Raw(string.Join("','",Model.Answers.Select(a=>a.PollAnswer).ToList()))'],
            datasets: [{
                label: 'Votes',
                data: [@Html.Raw(string.Join(",",Model.Answers.Select(a=>a.Responses.Count).ToList()))],
                backgroundColor: ['#42417a', '#215dbf', '#31d2de', '#748f91'],
                hoverOffset: 5
            }]
        },
        options: {
            indexAxis: 'y', // Set axes
            scales: {               
                yAxes: [{
                    ticks: {
                        stepSize: 1,
                        beginAtZero: true
                        
                    }
                }]
            }
        }
    })



       

    </script>
}

@section styles{

    <style>

        .switch {
            position: relative;
            display: block;
            vertical-align: top;
            width: 100px;
            height: 30px;
            padding: 3px;
            margin: 0 10px 10px 0;
            background: linear-gradient(to bottom, #eeeeee, #FFFFFF 25px);
            background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF 25px);
            border-radius: 18px;
            box-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05);
            cursor: pointer;
            box-sizing: content-box;
        }

        .switch-input {
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            box-sizing: content-box;
        }

        .switch-label {
            position: relative;
            display: block;
            height: inherit;
            font-size: 10px;
            font-weight: bold;
            background: #eceeef;
            border-radius: inherit;
            box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);
            box-sizing: content-box;
        }

            .switch-label:before, .switch-label:after {
                position: absolute;
                top: 50%;
                margin-top: -.5em;
                line-height: 1;
                -webkit-transition: inherit;
                -moz-transition: inherit;
                -o-transition: inherit;
                transition: inherit;
                box-sizing: content-box;
            }

            .switch-label:before {
                content: attr(data-off);
                right: 11px;
                color: #aaaaaa;
                text-shadow: 0 1px rgba(255, 255, 255, 0.5);
            }

            .switch-label:after {
                content: attr(data-on);
                left: 11px;
                color: #FFFFFF;
                text-shadow: 0 1px rgba(0, 0, 0, 0.2);
                opacity: 0;
            }

        .switch-input:checked ~ .switch-label {
            background: #42417a;
            box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2);
        }

            .switch-input:checked ~ .switch-label:before {
                opacity: 0;
            }

            .switch-input:checked ~ .switch-label:after {
                opacity: 1;
            }

        .switch-handle {
            position: absolute;
            top: 4px;
            left: 4px;
            width: 28px;
            height: 28px;
            background: linear-gradient(to bottom, #FFFFFF 40%, #f0f0f0);
            background-image: -webkit-linear-gradient(top, #FFFFFF 40%, #f0f0f0);
            border-radius: 100%;
            box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);
        }

            .switch-handle:before {
                content: "";
                position: absolute;
                top: 50%;
                left: 50%;
                margin: -6px 0 0 -6px;
                width: 12px;
                height: 12px;
                background: linear-gradient(to bottom, #eeeeee, #FFFFFF);
                background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF);
                border-radius: 6px;
                box-shadow: inset 0 1px rgba(0, 0, 0, 0.02);
            }

        .switch-input:checked ~ .switch-handle {
            left: 74px;
            box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);
        }


        .switch-label, .switch-handle {
            transition: All 0.3s ease;
            -webkit-transition: All 0.3s ease;
            -moz-transition: All 0.3s ease;
            -o-transition: All 0.3s ease;
        }
    </style>
}