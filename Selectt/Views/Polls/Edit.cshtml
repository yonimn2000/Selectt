@model Selectt.Models.PollEditModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Poll</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PollId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AreResultsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AreResultsPublic)
                    @Html.ValidationMessageFor(model => model.AreResultsPublic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

        <hr />

        @Html.ActionLink("Add an Answer", "Create", "Answers", new { pollId = Model.PollId }, null)
        <table class="table">
            <tr>
                <th>Answer</th>
                <th></th>
            </tr>
            @foreach (var answer in Model.Answers)
            {
                <tr>
                    <td>@answer.PollAnswer</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Answers", new { id = answer.AnswerId }, null) |
                        @Html.ActionLink("Delete", "Delete", "Answers", new { id = answer.AnswerId }, null)
                    </td>
                </tr>
            }
        </table>

        @Html.ActionLink("Add an Allowed Respondent", "Create", "Respondents", new { pollId = Model.PollId }, null)
        <table class="table">
            <tr>
                <th>Respondent Email</th>
                <th></th>
            </tr>
            @foreach (var respondent in Model.Respondents)
            {
                <tr>
                    <td>@respondent.Email</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Respondents", new { id = respondent.RespondentId }, null) |
                        @Html.ActionLink("Delete", "Delete", "Respondents", new { id = respondent.RespondentId }, null)
                    </td>
                </tr>
            }
        </table>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}